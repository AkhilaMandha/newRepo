

CREATE COMPUTE MODULE AadharToken_Res
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		--DECLARE inGetValRef	REFERENCE TO InputRoot.XMLNSC.*:Envelope.*:Body.*:GetValueResponse;
		DECLARE inGetValRef	REFERENCE TO InputRoot.XMLNSC.*.*:Body.*:GetValueResponse;
		DECLARE envRef		REFERENCE TO Environment.Variables[>];
		
		CREATE FIELD OutputRoot.JSON.Data.response;
		DECLARE outRespRef , outHdrRef , outAadharRef , outErrorRef , outItemRef REFERENCE TO OutputRoot.JSON.Data.response; 
		CALL JsonHeader(outRespRef , envRef);  
		
		DECLARE payload , ibxmlChar CHARACTER;
		DECLARE ibxmlBlob BLOB;
		SET payload = FIELDNAME(InputRoot.*[<]);
		
		IF payload = 'BLOB' THEN
		/*	
			CREATE FIELD OutputRoot.JSON.Data.response;
			DECLARE outRespRef , outHdrRef , outErrorRef , outItemRef REFERENCE TO OutputRoot.JSON.Data.response; 
			CREATE LASTCHILD OF outRespRef AS outHdrRef NAME 'header';   
				SET outHdrRef.requestUUID 	= envRef.RequestID;
				SET outHdrRef.channelId 	= envRef.ChannelID;
				SET outHdrRef.status 		= 'failed';
		*/	
			SET outRespRef.header.status 		= 'failed';	
			CREATE LASTCHILD OF outRespRef AS outErrorRef IDENTITY (JSON.Array)error;
				CREATE LASTCHILD OF outErrorRef AS outItemRef NAME 'Item';
					SET outItemRef.errorCode = '9001';
					SET outItemRef.errorDesc = COALESCE(CAST(InputRoot.BLOB.BLOB AS CHARACTER CCSID 1208) , '');	
		ELSEIF EXISTS(InputRoot.XMLNSC.*.*:Body.*:Fault[]) THEN
			SET outRespRef.header.status 		= 'failed';	
			CREATE LASTCHILD OF outRespRef AS outErrorRef IDENTITY (JSON.Array)error;
				CREATE LASTCHILD OF outErrorRef AS outItemRef NAME 'Item';
					SET outItemRef.errorCode = COALESCE(InputRoot.XMLNSC.*.*:Body.*:Fault.*:faultcode , '');	
					SET outItemRef.errorDesc = COALESCE(InputRoot.XMLNSC.*.*:Body.*:Fault.*:faultstring , '');	
		ELSE
			CREATE LASTCHILD OF outRespRef.body AS outAadharRef NAME 'aadharRes';  
				SET outAadharRef.return = inGetValRef.*:return;				
		END IF;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

CREATE PROCEDURE JsonHeader(INOUT outRespRef REFERENCE , IN envRef REFERENCE) BEGIN
	DECLARE outHdrRef REFERENCE TO outRespRef;  
	CREATE LASTCHILD OF outRespRef AS outHdrRef NAME 'header';   
		SET outHdrRef.requestUUID 	= envRef.RequestID;
		SET outHdrRef.channelId 	= envRef.ChannelID;
		SET outHdrRef.status 		= 'success'; 
END; 