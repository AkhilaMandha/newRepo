

CREATE COMPUTE MODULE VaultToken_Req
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		DECLARE inJsonReqRef	REFERENCE TO InputRoot.JSON.Data.request;
		DECLARE inReqHdrRef 	REFERENCE TO inJsonReqRef.header;
		DECLARE inVaultRef 		REFERENCE TO inJsonReqRef.body.vaultTokenReq;
		DECLARE cacheRef 		REFERENCE TO Environment.Variables.CachedData[>];
		
		SET Environment.Variables.RequestID = inReqHdrRef.requestUUID;
		SET Environment.Variables.gbl 		= inReqHdrRef.requestUUID;
		SET Environment.Variables.ChannelID = inReqHdrRef.channelId;
		
		CREATE FIELD OutputRoot.XMLNSC.soapenv:Envelope;  
		DECLARE outEnvRef , outSoapBodyRef , outGetTokenRef REFERENCE TO OutputRoot.XMLNSC.soapenv:Envelope; 
		
		SET outEnvRef.(XMLNSC.NamespaceDecl)xmlns:soapenv 	= soapenv;
		SET outEnvRef.(XMLNSC.NamespaceDecl)xmlns:axis 		= axis;  
		
		SET outEnvRef.soapenv:Header VALUE = NULL;
		CREATE LASTCHILD OF outEnvRef AS outSoapBodyRef NAME 'soapenv:Body';  
			CREATE LASTCHILD OF outSoapBodyRef AS outGetTokenRef NAME 'axis:GetTokensByTokenProperty';
				SET outGetTokenRef.axis:naeUser 		= inVaultRef.naeUser;
				SET outGetTokenRef.axis:naePassword 	= inVaultRef.naePassword;
				SET outGetTokenRef.axis:dbUser 			= inVaultRef.dbUser;
				SET outGetTokenRef.axis:dbPswd 			= inVaultRef.dbPswd;
				SET outGetTokenRef.axis:tableName 		= inVaultRef.tableName;
				SET outGetTokenRef.axis:token 			= inVaultRef.tokenProp;
				
		SET OutputLocalEnvironment.Destination.HTTP.RequestURL	= cacheRef.VaultURL; 
				
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
